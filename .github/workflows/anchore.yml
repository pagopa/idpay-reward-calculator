# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

# This workflow checks out code, builds an image, performs a container image
# vulnerability scan with Anchore's Grype tool, and integrates the results with GitHub Advanced Security
# code scanning feature.  For more information on the Anchore scan action usage
# and parameters, see https://github.com/anchore/scan-action. For more
# information on Anchore's container image scanning tool Grype, see
# https://github.com/anchore/grype
name: Anchore Container Scan

on:
  pull_request:
    # The branches below must be a subset of the branches above
    branches: [ "release-dev" ]
  schedule:
    - cron: '00 07 * * *'

permissions:
  contents: read

env:
  DOCKERFILE: Dockerfile

jobs:
  Anchore-Build-Scan:
    permissions:
      contents: read # for actions/checkout to fetch code
      security-events: write # for github/codeql-action/upload-sarif to upload SARIF results
      actions: read # only required for a private repository by github/codeql-action/upload-sarif to get the Action run status
    runs-on: ubuntu-latest
    environment: dev
    steps:
      - name: Checkout the code
        uses: actions/checkout@v3
      - name: Build the Docker image
        run: docker build . --file ${{ env.DOCKERFILE }} --tag localbuild/testimage:latest
      - name: Run the Anchore Grype scan action
        uses: anchore/scan-action@d5aa5b6cb9414b0c7771438046ff5bcfa2854ed7
        id: scan
        with:
          image: "localbuild/testimage:latest"
          fail-build: true
          severity-cutoff: "high"
        continue-on-error: true
      - name: Upload Anchore Scan Report
        uses: github/codeql-action/upload-sarif@v2
        if: always()
        with:
          sarif_file: ${{ steps.scan.outputs.sarif }}
      - name: Inspect action SARIF report
        if: always()
        run: cat ${{ steps.scan.outputs.sarif }}
      - name: Send notification to Slack
        id: slack
        if: ${{ github.event_name == 'schedule' && steps.scan.outcome == 'failure'}}
        uses: slackapi/slack-github-action@v1.23.0
        with:
          payload: |
            {
              "text": "GitHub Action scan result: ${{ steps.scan.outcome }}",
              "blocks": [
                {
                  "type": "header",
                  "text": {
                    "type": "plain_text",
                    "text": "${{ github.workspace }} - Notification Scan Result"
                  }
                },
                {
                  "type": "section",
                  "text": {
                    "type": "mrkdwn",
                    "text": "GitHub Action scan result: ${{ steps.scan.outcome }}"
                  }
                }
              ]
            }
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.CVE_SCAN_SLACK_WEBHOOK }}
          SLACK_WEBHOOK_TYPE: INCOMING_WEBHOOK